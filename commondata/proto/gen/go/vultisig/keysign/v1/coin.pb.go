// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vultisig/keysign/v1/coin.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Coin only contains information that the app can use it to identify the relevant coin in the vault
type Coin struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Ticker          string                 `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Address         string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ContractAddress string                 `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Decimals        int32                  `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	PriceProviderId string                 `protobuf:"bytes,6,opt,name=price_provider_id,json=priceProviderId,proto3" json:"price_provider_id,omitempty"`
	IsNativeToken   bool                   `protobuf:"varint,7,opt,name=is_native_token,json=isNativeToken,proto3" json:"is_native_token,omitempty"`
	HexPublicKey    string                 `protobuf:"bytes,8,opt,name=hex_public_key,json=hexPublicKey,proto3" json:"hex_public_key,omitempty"`
	Logo            string                 `protobuf:"bytes,9,opt,name=logo,proto3" json:"logo,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_vultisig_keysign_v1_coin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_coin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_coin_proto_rawDescGZIP(), []int{0}
}

func (x *Coin) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Coin) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *Coin) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Coin) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Coin) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Coin) GetPriceProviderId() string {
	if x != nil {
		return x.PriceProviderId
	}
	return ""
}

func (x *Coin) GetIsNativeToken() bool {
	if x != nil {
		return x.IsNativeToken
	}
	return false
}

func (x *Coin) GetHexPublicKey() string {
	if x != nil {
		return x.HexPublicKey
	}
	return ""
}

func (x *Coin) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

var File_vultisig_keysign_v1_coin_proto protoreflect.FileDescriptor

const file_vultisig_keysign_v1_coin_proto_rawDesc = "" +
	"\n" +
	"\x1evultisig/keysign/v1/coin.proto\x12\x13vultisig.keysign.v1\"\xa3\x02\n" +
	"\x04Coin\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x16\n" +
	"\x06ticker\x18\x02 \x01(\tR\x06ticker\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12)\n" +
	"\x10contract_address\x18\x04 \x01(\tR\x0fcontractAddress\x12\x1a\n" +
	"\bdecimals\x18\x05 \x01(\x05R\bdecimals\x12*\n" +
	"\x11price_provider_id\x18\x06 \x01(\tR\x0fpriceProviderId\x12&\n" +
	"\x0fis_native_token\x18\a \x01(\bR\risNativeToken\x12$\n" +
	"\x0ehex_public_key\x18\b \x01(\tR\fhexPublicKey\x12\x12\n" +
	"\x04logo\x18\t \x01(\tR\x04logoBT\n" +
	"\x13vultisig.keysign.v1Z8github.com/vultisig/commondata/go/vultisig/keysign/v1;v1\xba\x02\x02VSb\x06proto3"

var (
	file_vultisig_keysign_v1_coin_proto_rawDescOnce sync.Once
	file_vultisig_keysign_v1_coin_proto_rawDescData []byte
)

func file_vultisig_keysign_v1_coin_proto_rawDescGZIP() []byte {
	file_vultisig_keysign_v1_coin_proto_rawDescOnce.Do(func() {
		file_vultisig_keysign_v1_coin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vultisig_keysign_v1_coin_proto_rawDesc), len(file_vultisig_keysign_v1_coin_proto_rawDesc)))
	})
	return file_vultisig_keysign_v1_coin_proto_rawDescData
}

var file_vultisig_keysign_v1_coin_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_vultisig_keysign_v1_coin_proto_goTypes = []any{
	(*Coin)(nil), // 0: vultisig.keysign.v1.Coin
}
var file_vultisig_keysign_v1_coin_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_vultisig_keysign_v1_coin_proto_init() }
func file_vultisig_keysign_v1_coin_proto_init() {
	if File_vultisig_keysign_v1_coin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vultisig_keysign_v1_coin_proto_rawDesc), len(file_vultisig_keysign_v1_coin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vultisig_keysign_v1_coin_proto_goTypes,
		DependencyIndexes: file_vultisig_keysign_v1_coin_proto_depIdxs,
		MessageInfos:      file_vultisig_keysign_v1_coin_proto_msgTypes,
	}.Build()
	File_vultisig_keysign_v1_coin_proto = out.File
	file_vultisig_keysign_v1_coin_proto_goTypes = nil
	file_vultisig_keysign_v1_coin_proto_depIdxs = nil
}
