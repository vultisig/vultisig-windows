// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vultisig/keysign/v1/blockchain_specific.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionType int32

const (
	TransactionType_TRANSACTION_TYPE_UNSPECIFIED      TransactionType = 0
	TransactionType_TRANSACTION_TYPE_VOTE             TransactionType = 1
	TransactionType_TRANSACTION_TYPE_PROPOSAL         TransactionType = 2
	TransactionType_TRANSACTION_TYPE_IBC_TRANSFER     TransactionType = 3
	TransactionType_TRANSACTION_TYPE_THOR_MERGE       TransactionType = 4
	TransactionType_TRANSACTION_TYPE_THOR_UNMERGE     TransactionType = 5
	TransactionType_TRANSACTION_TYPE_TON_DEPOSIT      TransactionType = 6
	TransactionType_TRANSACTION_TYPE_TON_WITHDRAW     TransactionType = 7
	TransactionType_TRANSACTION_TYPE_GENERIC_CONTRACT TransactionType = 8
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "TRANSACTION_TYPE_UNSPECIFIED",
		1: "TRANSACTION_TYPE_VOTE",
		2: "TRANSACTION_TYPE_PROPOSAL",
		3: "TRANSACTION_TYPE_IBC_TRANSFER",
		4: "TRANSACTION_TYPE_THOR_MERGE",
		5: "TRANSACTION_TYPE_THOR_UNMERGE",
		6: "TRANSACTION_TYPE_TON_DEPOSIT",
		7: "TRANSACTION_TYPE_TON_WITHDRAW",
		8: "TRANSACTION_TYPE_GENERIC_CONTRACT",
	}
	TransactionType_value = map[string]int32{
		"TRANSACTION_TYPE_UNSPECIFIED":      0,
		"TRANSACTION_TYPE_VOTE":             1,
		"TRANSACTION_TYPE_PROPOSAL":         2,
		"TRANSACTION_TYPE_IBC_TRANSFER":     3,
		"TRANSACTION_TYPE_THOR_MERGE":       4,
		"TRANSACTION_TYPE_THOR_UNMERGE":     5,
		"TRANSACTION_TYPE_TON_DEPOSIT":      6,
		"TRANSACTION_TYPE_TON_WITHDRAW":     7,
		"TRANSACTION_TYPE_GENERIC_CONTRACT": 8,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_vultisig_keysign_v1_blockchain_specific_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_vultisig_keysign_v1_blockchain_specific_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{0}
}

type UTXOSpecific struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ByteFee       string                 `protobuf:"bytes,1,opt,name=byte_fee,json=byteFee,proto3" json:"byte_fee,omitempty"`
	SendMaxAmount bool                   `protobuf:"varint,2,opt,name=send_max_amount,json=sendMaxAmount,proto3" json:"send_max_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UTXOSpecific) Reset() {
	*x = UTXOSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UTXOSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOSpecific) ProtoMessage() {}

func (x *UTXOSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOSpecific.ProtoReflect.Descriptor instead.
func (*UTXOSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{0}
}

func (x *UTXOSpecific) GetByteFee() string {
	if x != nil {
		return x.ByteFee
	}
	return ""
}

func (x *UTXOSpecific) GetSendMaxAmount() bool {
	if x != nil {
		return x.SendMaxAmount
	}
	return false
}

type CardanoChainSpecific struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ByteFee       int64                  `protobuf:"varint,1,opt,name=byte_fee,json=byteFee,proto3" json:"byte_fee,omitempty"`
	SendMaxAmount bool                   `protobuf:"varint,2,opt,name=send_max_amount,json=sendMaxAmount,proto3" json:"send_max_amount,omitempty"`
	Ttl           uint64                 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Add TTL parameter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardanoChainSpecific) Reset() {
	*x = CardanoChainSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardanoChainSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardanoChainSpecific) ProtoMessage() {}

func (x *CardanoChainSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardanoChainSpecific.ProtoReflect.Descriptor instead.
func (*CardanoChainSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{1}
}

func (x *CardanoChainSpecific) GetByteFee() int64 {
	if x != nil {
		return x.ByteFee
	}
	return 0
}

func (x *CardanoChainSpecific) GetSendMaxAmount() bool {
	if x != nil {
		return x.SendMaxAmount
	}
	return false
}

func (x *CardanoChainSpecific) GetTtl() uint64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type EthereumSpecific struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxFeePerGasWei string                 `protobuf:"bytes,1,opt,name=max_fee_per_gas_wei,json=maxFeePerGasWei,proto3" json:"max_fee_per_gas_wei,omitempty"`
	PriorityFee     string                 `protobuf:"bytes,2,opt,name=priority_fee,json=priorityFee,proto3" json:"priority_fee,omitempty"`
	Nonce           int64                  `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasLimit        string                 `protobuf:"bytes,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EthereumSpecific) Reset() {
	*x = EthereumSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthereumSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumSpecific) ProtoMessage() {}

func (x *EthereumSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumSpecific.ProtoReflect.Descriptor instead.
func (*EthereumSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{2}
}

func (x *EthereumSpecific) GetMaxFeePerGasWei() string {
	if x != nil {
		return x.MaxFeePerGasWei
	}
	return ""
}

func (x *EthereumSpecific) GetPriorityFee() string {
	if x != nil {
		return x.PriorityFee
	}
	return ""
}

func (x *EthereumSpecific) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EthereumSpecific) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

type THORChainSpecific struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountNumber   uint64                 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Sequence        uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Fee             uint64                 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	IsDeposit       bool                   `protobuf:"varint,4,opt,name=is_deposit,json=isDeposit,proto3" json:"is_deposit,omitempty"`
	TransactionType TransactionType        `protobuf:"varint,5,opt,name=transaction_type,json=transactionType,proto3,enum=vultisig.keysign.v1.TransactionType" json:"transaction_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *THORChainSpecific) Reset() {
	*x = THORChainSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *THORChainSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*THORChainSpecific) ProtoMessage() {}

func (x *THORChainSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use THORChainSpecific.ProtoReflect.Descriptor instead.
func (*THORChainSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{3}
}

func (x *THORChainSpecific) GetAccountNumber() uint64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *THORChainSpecific) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *THORChainSpecific) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *THORChainSpecific) GetIsDeposit() bool {
	if x != nil {
		return x.IsDeposit
	}
	return false
}

func (x *THORChainSpecific) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

type MAYAChainSpecific struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountNumber uint64                 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	IsDeposit     bool                   `protobuf:"varint,3,opt,name=is_deposit,json=isDeposit,proto3" json:"is_deposit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MAYAChainSpecific) Reset() {
	*x = MAYAChainSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MAYAChainSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MAYAChainSpecific) ProtoMessage() {}

func (x *MAYAChainSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MAYAChainSpecific.ProtoReflect.Descriptor instead.
func (*MAYAChainSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{4}
}

func (x *MAYAChainSpecific) GetAccountNumber() uint64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *MAYAChainSpecific) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MAYAChainSpecific) GetIsDeposit() bool {
	if x != nil {
		return x.IsDeposit
	}
	return false
}

type CosmosSpecific struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountNumber   uint64                 `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Sequence        uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Gas             uint64                 `protobuf:"varint,3,opt,name=gas,proto3" json:"gas,omitempty"`
	TransactionType TransactionType        `protobuf:"varint,4,opt,name=transaction_type,json=transactionType,proto3,enum=vultisig.keysign.v1.TransactionType" json:"transaction_type,omitempty"`
	IbcDenomTraces  *CosmosIbcDenomTrace   `protobuf:"bytes,5,opt,name=ibc_denom_traces,json=ibcDenomTraces,proto3,oneof" json:"ibc_denom_traces,omitempty"`
	IbcInfo         *CosmosIbcInfo         `protobuf:"bytes,6,opt,name=ibc_info,json=ibcInfo,proto3,oneof" json:"ibc_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CosmosSpecific) Reset() {
	*x = CosmosSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CosmosSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosSpecific) ProtoMessage() {}

func (x *CosmosSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosSpecific.ProtoReflect.Descriptor instead.
func (*CosmosSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{5}
}

func (x *CosmosSpecific) GetAccountNumber() uint64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *CosmosSpecific) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *CosmosSpecific) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *CosmosSpecific) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *CosmosSpecific) GetIbcDenomTraces() *CosmosIbcDenomTrace {
	if x != nil {
		return x.IbcDenomTraces
	}
	return nil
}

func (x *CosmosSpecific) GetIbcInfo() *CosmosIbcInfo {
	if x != nil {
		return x.IbcInfo
	}
	return nil
}

type CosmosIbcDenomTrace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	BaseDenom     string                 `protobuf:"bytes,2,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	LatestBlock   string                 `protobuf:"bytes,3,opt,name=latest_block,json=latestBlock,proto3" json:"latest_block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CosmosIbcDenomTrace) Reset() {
	*x = CosmosIbcDenomTrace{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CosmosIbcDenomTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosIbcDenomTrace) ProtoMessage() {}

func (x *CosmosIbcDenomTrace) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosIbcDenomTrace.ProtoReflect.Descriptor instead.
func (*CosmosIbcDenomTrace) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{6}
}

func (x *CosmosIbcDenomTrace) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CosmosIbcDenomTrace) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *CosmosIbcDenomTrace) GetLatestBlock() string {
	if x != nil {
		return x.LatestBlock
	}
	return ""
}

type CosmosIbcInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SourcePort     string                 `protobuf:"bytes,1,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	SourceChannel  string                 `protobuf:"bytes,2,opt,name=source_channel,json=sourceChannel,proto3" json:"source_channel,omitempty"`
	RevisionNumber uint64                 `protobuf:"varint,3,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	RevisionHeight uint64                 `protobuf:"varint,4,opt,name=revision_height,json=revisionHeight,proto3" json:"revision_height,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CosmosIbcInfo) Reset() {
	*x = CosmosIbcInfo{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CosmosIbcInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosIbcInfo) ProtoMessage() {}

func (x *CosmosIbcInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosIbcInfo.ProtoReflect.Descriptor instead.
func (*CosmosIbcInfo) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{7}
}

func (x *CosmosIbcInfo) GetSourcePort() string {
	if x != nil {
		return x.SourcePort
	}
	return ""
}

func (x *CosmosIbcInfo) GetSourceChannel() string {
	if x != nil {
		return x.SourceChannel
	}
	return ""
}

func (x *CosmosIbcInfo) GetRevisionNumber() uint64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *CosmosIbcInfo) GetRevisionHeight() uint64 {
	if x != nil {
		return x.RevisionHeight
	}
	return 0
}

type SolanaSpecific struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	RecentBlockHash            string                 `protobuf:"bytes,1,opt,name=recent_block_hash,json=recentBlockHash,proto3" json:"recent_block_hash,omitempty"`
	PriorityFee                string                 `protobuf:"bytes,2,opt,name=priority_fee,json=priorityFee,proto3" json:"priority_fee,omitempty"`
	FromTokenAssociatedAddress *string                `protobuf:"bytes,3,opt,name=from_token_associated_address,json=fromTokenAssociatedAddress,proto3,oneof" json:"from_token_associated_address,omitempty"`
	ToTokenAssociatedAddress   *string                `protobuf:"bytes,4,opt,name=to_token_associated_address,json=toTokenAssociatedAddress,proto3,oneof" json:"to_token_associated_address,omitempty"`
	ProgramId                  *bool                  `protobuf:"varint,5,opt,name=program_id,json=programId,proto3,oneof" json:"program_id,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *SolanaSpecific) Reset() {
	*x = SolanaSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaSpecific) ProtoMessage() {}

func (x *SolanaSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaSpecific.ProtoReflect.Descriptor instead.
func (*SolanaSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{8}
}

func (x *SolanaSpecific) GetRecentBlockHash() string {
	if x != nil {
		return x.RecentBlockHash
	}
	return ""
}

func (x *SolanaSpecific) GetPriorityFee() string {
	if x != nil {
		return x.PriorityFee
	}
	return ""
}

func (x *SolanaSpecific) GetFromTokenAssociatedAddress() string {
	if x != nil && x.FromTokenAssociatedAddress != nil {
		return *x.FromTokenAssociatedAddress
	}
	return ""
}

func (x *SolanaSpecific) GetToTokenAssociatedAddress() string {
	if x != nil && x.ToTokenAssociatedAddress != nil {
		return *x.ToTokenAssociatedAddress
	}
	return ""
}

func (x *SolanaSpecific) GetProgramId() bool {
	if x != nil && x.ProgramId != nil {
		return *x.ProgramId
	}
	return false
}

type PolkadotSpecific struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RecentBlockHash    string                 `protobuf:"bytes,1,opt,name=recent_block_hash,json=recentBlockHash,proto3" json:"recent_block_hash,omitempty"`
	Nonce              uint64                 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CurrentBlockNumber string                 `protobuf:"bytes,3,opt,name=current_block_number,json=currentBlockNumber,proto3" json:"current_block_number,omitempty"`
	SpecVersion        uint32                 `protobuf:"varint,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	TransactionVersion uint32                 `protobuf:"varint,5,opt,name=transaction_version,json=transactionVersion,proto3" json:"transaction_version,omitempty"`
	GenesisHash        string                 `protobuf:"bytes,6,opt,name=genesis_hash,json=genesisHash,proto3" json:"genesis_hash,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PolkadotSpecific) Reset() {
	*x = PolkadotSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolkadotSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolkadotSpecific) ProtoMessage() {}

func (x *PolkadotSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolkadotSpecific.ProtoReflect.Descriptor instead.
func (*PolkadotSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{9}
}

func (x *PolkadotSpecific) GetRecentBlockHash() string {
	if x != nil {
		return x.RecentBlockHash
	}
	return ""
}

func (x *PolkadotSpecific) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *PolkadotSpecific) GetCurrentBlockNumber() string {
	if x != nil {
		return x.CurrentBlockNumber
	}
	return ""
}

func (x *PolkadotSpecific) GetSpecVersion() uint32 {
	if x != nil {
		return x.SpecVersion
	}
	return 0
}

func (x *PolkadotSpecific) GetTransactionVersion() uint32 {
	if x != nil {
		return x.TransactionVersion
	}
	return 0
}

func (x *PolkadotSpecific) GetGenesisHash() string {
	if x != nil {
		return x.GenesisHash
	}
	return ""
}

type SuiCoin struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CoinType            string                 `protobuf:"bytes,1,opt,name=coin_type,json=coinType,proto3" json:"coin_type,omitempty"`
	CoinObjectId        string                 `protobuf:"bytes,2,opt,name=coin_object_id,json=coinObjectId,proto3" json:"coin_object_id,omitempty"`
	Version             string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Digest              string                 `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	Balance             string                 `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance,omitempty"`
	PreviousTransaction string                 `protobuf:"bytes,6,opt,name=previous_transaction,json=previousTransaction,proto3" json:"previous_transaction,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SuiCoin) Reset() {
	*x = SuiCoin{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuiCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiCoin) ProtoMessage() {}

func (x *SuiCoin) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiCoin.ProtoReflect.Descriptor instead.
func (*SuiCoin) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{10}
}

func (x *SuiCoin) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

func (x *SuiCoin) GetCoinObjectId() string {
	if x != nil {
		return x.CoinObjectId
	}
	return ""
}

func (x *SuiCoin) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SuiCoin) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *SuiCoin) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *SuiCoin) GetPreviousTransaction() string {
	if x != nil {
		return x.PreviousTransaction
	}
	return ""
}

type SuiSpecific struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ReferenceGasPrice string                 `protobuf:"bytes,1,opt,name=reference_gas_price,json=referenceGasPrice,proto3" json:"reference_gas_price,omitempty"`
	Coins             []*SuiCoin             `protobuf:"bytes,2,rep,name=coins,proto3" json:"coins,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SuiSpecific) Reset() {
	*x = SuiSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuiSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiSpecific) ProtoMessage() {}

func (x *SuiSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiSpecific.ProtoReflect.Descriptor instead.
func (*SuiSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{11}
}

func (x *SuiSpecific) GetReferenceGasPrice() string {
	if x != nil {
		return x.ReferenceGasPrice
	}
	return ""
}

func (x *SuiSpecific) GetCoins() []*SuiCoin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type TonSpecific struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SequenceNumber uint64                 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ExpireAt       uint64                 `protobuf:"varint,2,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Bounceable     bool                   `protobuf:"varint,3,opt,name=bounceable,proto3" json:"bounceable,omitempty"`
	SendMaxAmount  bool                   `protobuf:"varint,4,opt,name=send_max_amount,json=sendMaxAmount,proto3" json:"send_max_amount,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TonSpecific) Reset() {
	*x = TonSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TonSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TonSpecific) ProtoMessage() {}

func (x *TonSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TonSpecific.ProtoReflect.Descriptor instead.
func (*TonSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{12}
}

func (x *TonSpecific) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *TonSpecific) GetExpireAt() uint64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *TonSpecific) GetBounceable() bool {
	if x != nil {
		return x.Bounceable
	}
	return false
}

func (x *TonSpecific) GetSendMaxAmount() bool {
	if x != nil {
		return x.SendMaxAmount
	}
	return false
}

type RippleSpecific struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Sequence           uint64                 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Gas                uint64                 `protobuf:"varint,2,opt,name=gas,proto3" json:"gas,omitempty"`
	LastLedgerSequence uint64                 `protobuf:"varint,3,opt,name=last_ledger_sequence,json=lastLedgerSequence,proto3" json:"last_ledger_sequence,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RippleSpecific) Reset() {
	*x = RippleSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RippleSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RippleSpecific) ProtoMessage() {}

func (x *RippleSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RippleSpecific.ProtoReflect.Descriptor instead.
func (*RippleSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{13}
}

func (x *RippleSpecific) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *RippleSpecific) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *RippleSpecific) GetLastLedgerSequence() uint64 {
	if x != nil {
		return x.LastLedgerSequence
	}
	return 0
}

type TronSpecific struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp                 uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Expiration                uint64                 `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	BlockHeaderTimestamp      uint64                 `protobuf:"varint,3,opt,name=block_header_timestamp,json=blockHeaderTimestamp,proto3" json:"block_header_timestamp,omitempty"`
	BlockHeaderNumber         uint64                 `protobuf:"varint,4,opt,name=block_header_number,json=blockHeaderNumber,proto3" json:"block_header_number,omitempty"`
	BlockHeaderVersion        uint64                 `protobuf:"varint,5,opt,name=block_header_version,json=blockHeaderVersion,proto3" json:"block_header_version,omitempty"`
	BlockHeaderTxTrieRoot     string                 `protobuf:"bytes,6,opt,name=block_header_tx_trie_root,json=blockHeaderTxTrieRoot,proto3" json:"block_header_tx_trie_root,omitempty"`
	BlockHeaderParentHash     string                 `protobuf:"bytes,7,opt,name=block_header_parent_hash,json=blockHeaderParentHash,proto3" json:"block_header_parent_hash,omitempty"`
	BlockHeaderWitnessAddress string                 `protobuf:"bytes,8,opt,name=block_header_witness_address,json=blockHeaderWitnessAddress,proto3" json:"block_header_witness_address,omitempty"`
	GasEstimation             uint64                 `protobuf:"varint,9,opt,name=gas_estimation,json=gasEstimation,proto3" json:"gas_estimation,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TronSpecific) Reset() {
	*x = TronSpecific{}
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TronSpecific) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronSpecific) ProtoMessage() {}

func (x *TronSpecific) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronSpecific.ProtoReflect.Descriptor instead.
func (*TronSpecific) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP(), []int{14}
}

func (x *TronSpecific) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TronSpecific) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *TronSpecific) GetBlockHeaderTimestamp() uint64 {
	if x != nil {
		return x.BlockHeaderTimestamp
	}
	return 0
}

func (x *TronSpecific) GetBlockHeaderNumber() uint64 {
	if x != nil {
		return x.BlockHeaderNumber
	}
	return 0
}

func (x *TronSpecific) GetBlockHeaderVersion() uint64 {
	if x != nil {
		return x.BlockHeaderVersion
	}
	return 0
}

func (x *TronSpecific) GetBlockHeaderTxTrieRoot() string {
	if x != nil {
		return x.BlockHeaderTxTrieRoot
	}
	return ""
}

func (x *TronSpecific) GetBlockHeaderParentHash() string {
	if x != nil {
		return x.BlockHeaderParentHash
	}
	return ""
}

func (x *TronSpecific) GetBlockHeaderWitnessAddress() string {
	if x != nil {
		return x.BlockHeaderWitnessAddress
	}
	return ""
}

func (x *TronSpecific) GetGasEstimation() uint64 {
	if x != nil {
		return x.GasEstimation
	}
	return 0
}

var File_vultisig_keysign_v1_blockchain_specific_proto protoreflect.FileDescriptor

const file_vultisig_keysign_v1_blockchain_specific_proto_rawDesc = "" +
	"\n" +
	"-vultisig/keysign/v1/blockchain_specific.proto\x12\x13vultisig.keysign.v1\"Q\n" +
	"\fUTXOSpecific\x12\x19\n" +
	"\bbyte_fee\x18\x01 \x01(\tR\abyteFee\x12&\n" +
	"\x0fsend_max_amount\x18\x02 \x01(\bR\rsendMaxAmount\"k\n" +
	"\x14CardanoChainSpecific\x12\x19\n" +
	"\bbyte_fee\x18\x01 \x01(\x03R\abyteFee\x12&\n" +
	"\x0fsend_max_amount\x18\x02 \x01(\bR\rsendMaxAmount\x12\x10\n" +
	"\x03ttl\x18\x03 \x01(\x04R\x03ttl\"\x96\x01\n" +
	"\x10EthereumSpecific\x12,\n" +
	"\x13max_fee_per_gas_wei\x18\x01 \x01(\tR\x0fmaxFeePerGasWei\x12!\n" +
	"\fpriority_fee\x18\x02 \x01(\tR\vpriorityFee\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\x03R\x05nonce\x12\x1b\n" +
	"\tgas_limit\x18\x04 \x01(\tR\bgasLimit\"\xd8\x01\n" +
	"\x11THORChainSpecific\x12%\n" +
	"\x0eaccount_number\x18\x01 \x01(\x04R\raccountNumber\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\x10\n" +
	"\x03fee\x18\x03 \x01(\x04R\x03fee\x12\x1d\n" +
	"\n" +
	"is_deposit\x18\x04 \x01(\bR\tisDeposit\x12O\n" +
	"\x10transaction_type\x18\x05 \x01(\x0e2$.vultisig.keysign.v1.TransactionTypeR\x0ftransactionType\"u\n" +
	"\x11MAYAChainSpecific\x12%\n" +
	"\x0eaccount_number\x18\x01 \x01(\x04R\raccountNumber\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\x1d\n" +
	"\n" +
	"is_deposit\x18\x03 \x01(\bR\tisDeposit\"\xf5\x02\n" +
	"\x0eCosmosSpecific\x12%\n" +
	"\x0eaccount_number\x18\x01 \x01(\x04R\raccountNumber\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\x12\x10\n" +
	"\x03gas\x18\x03 \x01(\x04R\x03gas\x12O\n" +
	"\x10transaction_type\x18\x04 \x01(\x0e2$.vultisig.keysign.v1.TransactionTypeR\x0ftransactionType\x12W\n" +
	"\x10ibc_denom_traces\x18\x05 \x01(\v2(.vultisig.keysign.v1.CosmosIbcDenomTraceH\x00R\x0eibcDenomTraces\x88\x01\x01\x12B\n" +
	"\bibc_info\x18\x06 \x01(\v2\".vultisig.keysign.v1.CosmosIbcInfoH\x01R\aibcInfo\x88\x01\x01B\x13\n" +
	"\x11_ibc_denom_tracesB\v\n" +
	"\t_ibc_info\"k\n" +
	"\x13CosmosIbcDenomTrace\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"base_denom\x18\x02 \x01(\tR\tbaseDenom\x12!\n" +
	"\flatest_block\x18\x03 \x01(\tR\vlatestBlock\"\xa9\x01\n" +
	"\rCosmosIbcInfo\x12\x1f\n" +
	"\vsource_port\x18\x01 \x01(\tR\n" +
	"sourcePort\x12%\n" +
	"\x0esource_channel\x18\x02 \x01(\tR\rsourceChannel\x12'\n" +
	"\x0frevision_number\x18\x03 \x01(\x04R\x0erevisionNumber\x12'\n" +
	"\x0frevision_height\x18\x04 \x01(\x04R\x0erevisionHeight\"\xe0\x02\n" +
	"\x0eSolanaSpecific\x12*\n" +
	"\x11recent_block_hash\x18\x01 \x01(\tR\x0frecentBlockHash\x12!\n" +
	"\fpriority_fee\x18\x02 \x01(\tR\vpriorityFee\x12F\n" +
	"\x1dfrom_token_associated_address\x18\x03 \x01(\tH\x00R\x1afromTokenAssociatedAddress\x88\x01\x01\x12B\n" +
	"\x1bto_token_associated_address\x18\x04 \x01(\tH\x01R\x18toTokenAssociatedAddress\x88\x01\x01\x12\"\n" +
	"\n" +
	"program_id\x18\x05 \x01(\bH\x02R\tprogramId\x88\x01\x01B \n" +
	"\x1e_from_token_associated_addressB\x1e\n" +
	"\x1c_to_token_associated_addressB\r\n" +
	"\v_program_id\"\xfd\x01\n" +
	"\x10PolkadotSpecific\x12*\n" +
	"\x11recent_block_hash\x18\x01 \x01(\tR\x0frecentBlockHash\x12\x14\n" +
	"\x05nonce\x18\x02 \x01(\x04R\x05nonce\x120\n" +
	"\x14current_block_number\x18\x03 \x01(\tR\x12currentBlockNumber\x12!\n" +
	"\fspec_version\x18\x04 \x01(\rR\vspecVersion\x12/\n" +
	"\x13transaction_version\x18\x05 \x01(\rR\x12transactionVersion\x12!\n" +
	"\fgenesis_hash\x18\x06 \x01(\tR\vgenesisHash\"\xcb\x01\n" +
	"\aSuiCoin\x12\x1b\n" +
	"\tcoin_type\x18\x01 \x01(\tR\bcoinType\x12$\n" +
	"\x0ecoin_object_id\x18\x02 \x01(\tR\fcoinObjectId\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x16\n" +
	"\x06digest\x18\x04 \x01(\tR\x06digest\x12\x18\n" +
	"\abalance\x18\x05 \x01(\tR\abalance\x121\n" +
	"\x14previous_transaction\x18\x06 \x01(\tR\x13previousTransaction\"q\n" +
	"\vSuiSpecific\x12.\n" +
	"\x13reference_gas_price\x18\x01 \x01(\tR\x11referenceGasPrice\x122\n" +
	"\x05coins\x18\x02 \x03(\v2\x1c.vultisig.keysign.v1.SuiCoinR\x05coins\"\x9b\x01\n" +
	"\vTonSpecific\x12'\n" +
	"\x0fsequence_number\x18\x01 \x01(\x04R\x0esequenceNumber\x12\x1b\n" +
	"\texpire_at\x18\x02 \x01(\x04R\bexpireAt\x12\x1e\n" +
	"\n" +
	"bounceable\x18\x03 \x01(\bR\n" +
	"bounceable\x12&\n" +
	"\x0fsend_max_amount\x18\x04 \x01(\bR\rsendMaxAmount\"p\n" +
	"\x0eRippleSpecific\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x04R\bsequence\x12\x10\n" +
	"\x03gas\x18\x02 \x01(\x04R\x03gas\x120\n" +
	"\x14last_ledger_sequence\x18\x03 \x01(\x04R\x12lastLedgerSequence\"\xbf\x03\n" +
	"\fTronSpecific\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12\x1e\n" +
	"\n" +
	"expiration\x18\x02 \x01(\x04R\n" +
	"expiration\x124\n" +
	"\x16block_header_timestamp\x18\x03 \x01(\x04R\x14blockHeaderTimestamp\x12.\n" +
	"\x13block_header_number\x18\x04 \x01(\x04R\x11blockHeaderNumber\x120\n" +
	"\x14block_header_version\x18\x05 \x01(\x04R\x12blockHeaderVersion\x128\n" +
	"\x19block_header_tx_trie_root\x18\x06 \x01(\tR\x15blockHeaderTxTrieRoot\x127\n" +
	"\x18block_header_parent_hash\x18\a \x01(\tR\x15blockHeaderParentHash\x12?\n" +
	"\x1cblock_header_witness_address\x18\b \x01(\tR\x19blockHeaderWitnessAddress\x12%\n" +
	"\x0egas_estimation\x18\t \x01(\x04R\rgasEstimation*\xc0\x02\n" +
	"\x0fTransactionType\x12 \n" +
	"\x1cTRANSACTION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15TRANSACTION_TYPE_VOTE\x10\x01\x12\x1d\n" +
	"\x19TRANSACTION_TYPE_PROPOSAL\x10\x02\x12!\n" +
	"\x1dTRANSACTION_TYPE_IBC_TRANSFER\x10\x03\x12\x1f\n" +
	"\x1bTRANSACTION_TYPE_THOR_MERGE\x10\x04\x12!\n" +
	"\x1dTRANSACTION_TYPE_THOR_UNMERGE\x10\x05\x12 \n" +
	"\x1cTRANSACTION_TYPE_TON_DEPOSIT\x10\x06\x12!\n" +
	"\x1dTRANSACTION_TYPE_TON_WITHDRAW\x10\a\x12%\n" +
	"!TRANSACTION_TYPE_GENERIC_CONTRACT\x10\bBT\n" +
	"\x13vultisig.keysign.v1Z8github.com/vultisig/commondata/go/vultisig/keysign/v1;v1\xba\x02\x02VSb\x06proto3"

var (
	file_vultisig_keysign_v1_blockchain_specific_proto_rawDescOnce sync.Once
	file_vultisig_keysign_v1_blockchain_specific_proto_rawDescData []byte
)

func file_vultisig_keysign_v1_blockchain_specific_proto_rawDescGZIP() []byte {
	file_vultisig_keysign_v1_blockchain_specific_proto_rawDescOnce.Do(func() {
		file_vultisig_keysign_v1_blockchain_specific_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vultisig_keysign_v1_blockchain_specific_proto_rawDesc), len(file_vultisig_keysign_v1_blockchain_specific_proto_rawDesc)))
	})
	return file_vultisig_keysign_v1_blockchain_specific_proto_rawDescData
}

var file_vultisig_keysign_v1_blockchain_specific_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_vultisig_keysign_v1_blockchain_specific_proto_goTypes = []any{
	(TransactionType)(0),         // 0: vultisig.keysign.v1.TransactionType
	(*UTXOSpecific)(nil),         // 1: vultisig.keysign.v1.UTXOSpecific
	(*CardanoChainSpecific)(nil), // 2: vultisig.keysign.v1.CardanoChainSpecific
	(*EthereumSpecific)(nil),     // 3: vultisig.keysign.v1.EthereumSpecific
	(*THORChainSpecific)(nil),    // 4: vultisig.keysign.v1.THORChainSpecific
	(*MAYAChainSpecific)(nil),    // 5: vultisig.keysign.v1.MAYAChainSpecific
	(*CosmosSpecific)(nil),       // 6: vultisig.keysign.v1.CosmosSpecific
	(*CosmosIbcDenomTrace)(nil),  // 7: vultisig.keysign.v1.CosmosIbcDenomTrace
	(*CosmosIbcInfo)(nil),        // 8: vultisig.keysign.v1.CosmosIbcInfo
	(*SolanaSpecific)(nil),       // 9: vultisig.keysign.v1.SolanaSpecific
	(*PolkadotSpecific)(nil),     // 10: vultisig.keysign.v1.PolkadotSpecific
	(*SuiCoin)(nil),              // 11: vultisig.keysign.v1.SuiCoin
	(*SuiSpecific)(nil),          // 12: vultisig.keysign.v1.SuiSpecific
	(*TonSpecific)(nil),          // 13: vultisig.keysign.v1.TonSpecific
	(*RippleSpecific)(nil),       // 14: vultisig.keysign.v1.RippleSpecific
	(*TronSpecific)(nil),         // 15: vultisig.keysign.v1.TronSpecific
}
var file_vultisig_keysign_v1_blockchain_specific_proto_depIdxs = []int32{
	0,  // 0: vultisig.keysign.v1.THORChainSpecific.transaction_type:type_name -> vultisig.keysign.v1.TransactionType
	0,  // 1: vultisig.keysign.v1.CosmosSpecific.transaction_type:type_name -> vultisig.keysign.v1.TransactionType
	7,  // 2: vultisig.keysign.v1.CosmosSpecific.ibc_denom_traces:type_name -> vultisig.keysign.v1.CosmosIbcDenomTrace
	8,  // 3: vultisig.keysign.v1.CosmosSpecific.ibc_info:type_name -> vultisig.keysign.v1.CosmosIbcInfo
	11, // 4: vultisig.keysign.v1.SuiSpecific.coins:type_name -> vultisig.keysign.v1.SuiCoin
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_vultisig_keysign_v1_blockchain_specific_proto_init() }
func file_vultisig_keysign_v1_blockchain_specific_proto_init() {
	if File_vultisig_keysign_v1_blockchain_specific_proto != nil {
		return
	}
	file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[5].OneofWrappers = []any{}
	file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vultisig_keysign_v1_blockchain_specific_proto_rawDesc), len(file_vultisig_keysign_v1_blockchain_specific_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vultisig_keysign_v1_blockchain_specific_proto_goTypes,
		DependencyIndexes: file_vultisig_keysign_v1_blockchain_specific_proto_depIdxs,
		EnumInfos:         file_vultisig_keysign_v1_blockchain_specific_proto_enumTypes,
		MessageInfos:      file_vultisig_keysign_v1_blockchain_specific_proto_msgTypes,
	}.Build()
	File_vultisig_keysign_v1_blockchain_specific_proto = out.File
	file_vultisig_keysign_v1_blockchain_specific_proto_goTypes = nil
	file_vultisig_keysign_v1_blockchain_specific_proto_depIdxs = nil
}
