name: Vultisig build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: '--max-old-space-size=4096'

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.7.0'

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare Yarn
        run: corepack prepare yarn@4.6.0 --activate

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
  lint:
    needs: setup
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: yarn install
      - name: Check for unused code
        run: yarn knip
      - name: Lint
        run: yarn lint
      - name: run unit test
        run: yarn test
      - name: run typecheck
        run: yarn typecheck
  extension:
    needs: [setup, lint]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: yarn install
      - name: Build extension
        run: yarn workspace @clients/extension build
  build:
    needs: lint
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: true
      matrix:
        build:
          - name: 'App'
            platform: 'linux/amd64'
            os: 'ubuntu-22.04'
          - name: 'App'
            platform: 'windows/amd64'
            os: 'windows-latest'

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.7.0'

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare Yarn
        run: corepack prepare yarn@4.6.0 --activate

      - name: Install dependencies
        run: yarn install

      - name: Build wails
        uses: dAppServer/wails-build-action@main
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: '1.21'
          node-version: '23.7.0'
