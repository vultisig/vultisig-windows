// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file vultisig/keysign/v1/keysign_message.proto (package vultisig.keysign.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { OneInchSwapPayload } from "./1inch_swap_payload_pb";
import { file_vultisig_keysign_v1_1inch_swap_payload } from "./1inch_swap_payload_pb";
import type { CosmosSpecific, EthereumSpecific, MAYAChainSpecific, PolkadotSpecific, RippleSpecific, SolanaSpecific, SuiSpecific, THORChainSpecific, TonSpecific, TronSpecific, UTXOSpecific } from "./blockchain_specific_pb";
import { file_vultisig_keysign_v1_blockchain_specific } from "./blockchain_specific_pb";
import type { Coin } from "./coin_pb";
import { file_vultisig_keysign_v1_coin } from "./coin_pb";
import type { CustomMessagePayload } from "./custom_message_payload_pb";
import { file_vultisig_keysign_v1_custom_message_payload } from "./custom_message_payload_pb";
import type { Erc20ApprovePayload } from "./erc20_approve_payload_pb";
import { file_vultisig_keysign_v1_erc20_approve_payload } from "./erc20_approve_payload_pb";
import type { THORChainSwapPayload } from "./thorchain_swap_payload_pb";
import { file_vultisig_keysign_v1_thorchain_swap_payload } from "./thorchain_swap_payload_pb";
import type { UtxoInfo } from "./utxo_info_pb";
import { file_vultisig_keysign_v1_utxo_info } from "./utxo_info_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file vultisig/keysign/v1/keysign_message.proto.
 */
export const file_vultisig_keysign_v1_keysign_message: GenFile = /*@__PURE__*/
  fileDesc("Cil2dWx0aXNpZy9rZXlzaWduL3YxL2tleXNpZ25fbWVzc2FnZS5wcm90bxITdnVsdGlzaWcua2V5c2lnbi52MSKvAgoOS2V5c2lnbk1lc3NhZ2USEgoKc2Vzc2lvbl9pZBgBIAEoCRIUCgxzZXJ2aWNlX25hbWUYAiABKAkSGgoSZW5jcnlwdGlvbl9rZXlfaGV4GAQgASgJEjwKD2tleXNpZ25fcGF5bG9hZBgFIAEoCzIjLnZ1bHRpc2lnLmtleXNpZ24udjEuS2V5c2lnblBheWxvYWQSGgoSdXNlX3Z1bHRpc2lnX3JlbGF5GAYgASgIEhIKCnBheWxvYWRfaWQYByABKAkSTgoWY3VzdG9tX21lc3NhZ2VfcGF5bG9hZBgIIAEoCzIpLnZ1bHRpc2lnLmtleXNpZ24udjEuQ3VzdG9tTWVzc2FnZVBheWxvYWRIAIgBAUIZChdfY3VzdG9tX21lc3NhZ2VfcGF5bG9hZCKcCgoOS2V5c2lnblBheWxvYWQSJwoEY29pbhgBIAEoCzIZLnZ1bHRpc2lnLmtleXNpZ24udjEuQ29pbhISCgp0b19hZGRyZXNzGAIgASgJEhEKCXRvX2Ftb3VudBgDIAEoCRI6Cg11dHhvX3NwZWNpZmljGAQgASgLMiEudnVsdGlzaWcua2V5c2lnbi52MS5VVFhPU3BlY2lmaWNIABJCChFldGhlcmV1bV9zcGVjaWZpYxgFIAEoCzIlLnZ1bHRpc2lnLmtleXNpZ24udjEuRXRoZXJldW1TcGVjaWZpY0gAEkQKEnRob3JjaGFpbl9zcGVjaWZpYxgGIAEoCzImLnZ1bHRpc2lnLmtleXNpZ24udjEuVEhPUkNoYWluU3BlY2lmaWNIABI/Cg1tYXlhX3NwZWNpZmljGAcgASgLMiYudnVsdGlzaWcua2V5c2lnbi52MS5NQVlBQ2hhaW5TcGVjaWZpY0gAEj4KD2Nvc21vc19zcGVjaWZpYxgIIAEoCzIjLnZ1bHRpc2lnLmtleXNpZ24udjEuQ29zbW9zU3BlY2lmaWNIABI+Cg9zb2xhbmFfc3BlY2lmaWMYCSABKAsyIy52dWx0aXNpZy5rZXlzaWduLnYxLlNvbGFuYVNwZWNpZmljSAASQgoRcG9sa2Fkb3Rfc3BlY2lmaWMYCiABKAsyJS52dWx0aXNpZy5rZXlzaWduLnYxLlBvbGthZG90U3BlY2lmaWNIABI7Cg9zdWljaGVfc3BlY2lmaWMYCyABKAsyIC52dWx0aXNpZy5rZXlzaWduLnYxLlN1aVNwZWNpZmljSAASOAoMdG9uX3NwZWNpZmljGAwgASgLMiAudnVsdGlzaWcua2V5c2lnbi52MS5Ub25TcGVjaWZpY0gAEj4KD3JpcHBsZV9zcGVjaWZpYxgNIAEoCzIjLnZ1bHRpc2lnLmtleXNpZ24udjEuUmlwcGxlU3BlY2lmaWNIABI6Cg10cm9uX3NwZWNpZmljGA4gASgLMiEudnVsdGlzaWcua2V5c2lnbi52MS5Ucm9uU3BlY2lmaWNIABIwCgl1dHhvX2luZm8YFCADKAsyHS52dWx0aXNpZy5rZXlzaWduLnYxLlV0eG9JbmZvEhEKBG1lbW8YFSABKAlIAogBARJLChZ0aG9yY2hhaW5fc3dhcF9wYXlsb2FkGBYgASgLMikudnVsdGlzaWcua2V5c2lnbi52MS5USE9SQ2hhaW5Td2FwUGF5bG9hZEgBEksKFm1heWFjaGFpbl9zd2FwX3BheWxvYWQYFyABKAsyKS52dWx0aXNpZy5rZXlzaWduLnYxLlRIT1JDaGFpblN3YXBQYXlsb2FkSAESRwoUb25laW5jaF9zd2FwX3BheWxvYWQYGCABKAsyJy52dWx0aXNpZy5rZXlzaWduLnYxLk9uZUluY2hTd2FwUGF5bG9hZEgBEkwKFWVyYzIwX2FwcHJvdmVfcGF5bG9hZBgeIAEoCzIoLnZ1bHRpc2lnLmtleXNpZ24udjEuRXJjMjBBcHByb3ZlUGF5bG9hZEgDiAEBEh4KFnZhdWx0X3B1YmxpY19rZXlfZWNkc2EYHyABKAkSHAoUdmF1bHRfbG9jYWxfcGFydHlfaWQYICABKAlCFQoTYmxvY2tjaGFpbl9zcGVjaWZpY0IOCgxzd2FwX3BheWxvYWRCBwoFX21lbW9CGAoWX2VyYzIwX2FwcHJvdmVfcGF5bG9hZEJUChN2dWx0aXNpZy5rZXlzaWduLnYxWjhnaXRodWIuY29tL3Z1bHRpc2lnL2NvbW1vbmRhdGEvZ28vdnVsdGlzaWcva2V5c2lnbi92MTt2MboCAlZTYgZwcm90bzM", [file_vultisig_keysign_v1_1inch_swap_payload, file_vultisig_keysign_v1_blockchain_specific, file_vultisig_keysign_v1_coin, file_vultisig_keysign_v1_custom_message_payload, file_vultisig_keysign_v1_erc20_approve_payload, file_vultisig_keysign_v1_thorchain_swap_payload, file_vultisig_keysign_v1_utxo_info]);

/**
 * @generated from message vultisig.keysign.v1.KeysignMessage
 */
export type KeysignMessage = Message<"vultisig.keysign.v1.KeysignMessage"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string service_name = 2;
   */
  serviceName: string;

  /**
   * @generated from field: string encryption_key_hex = 4;
   */
  encryptionKeyHex: string;

  /**
   * @generated from field: vultisig.keysign.v1.KeysignPayload keysign_payload = 5;
   */
  keysignPayload?: KeysignPayload;

  /**
   * @generated from field: bool use_vultisig_relay = 6;
   */
  useVultisigRelay: boolean;

  /**
   * @generated from field: string payload_id = 7;
   */
  payloadId: string;

  /**
   * @generated from field: optional vultisig.keysign.v1.CustomMessagePayload custom_message_payload = 8;
   */
  customMessagePayload?: CustomMessagePayload;
};

/**
 * Describes the message vultisig.keysign.v1.KeysignMessage.
 * Use `create(KeysignMessageSchema)` to create a new message.
 */
export const KeysignMessageSchema: GenMessage<KeysignMessage> = /*@__PURE__*/
  messageDesc(file_vultisig_keysign_v1_keysign_message, 0);

/**
 * @generated from message vultisig.keysign.v1.KeysignPayload
 */
export type KeysignPayload = Message<"vultisig.keysign.v1.KeysignPayload"> & {
  /**
   * @generated from field: vultisig.keysign.v1.Coin coin = 1;
   */
  coin?: Coin;

  /**
   * @generated from field: string to_address = 2;
   */
  toAddress: string;

  /**
   * @generated from field: string to_amount = 3;
   */
  toAmount: string;

  /**
   * @generated from oneof vultisig.keysign.v1.KeysignPayload.blockchain_specific
   */
  blockchainSpecific: {
    /**
     * @generated from field: vultisig.keysign.v1.UTXOSpecific utxo_specific = 4;
     */
    value: UTXOSpecific;
    case: "utxoSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.EthereumSpecific ethereum_specific = 5;
     */
    value: EthereumSpecific;
    case: "ethereumSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.THORChainSpecific thorchain_specific = 6;
     */
    value: THORChainSpecific;
    case: "thorchainSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.MAYAChainSpecific maya_specific = 7;
     */
    value: MAYAChainSpecific;
    case: "mayaSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.CosmosSpecific cosmos_specific = 8;
     */
    value: CosmosSpecific;
    case: "cosmosSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.SolanaSpecific solana_specific = 9;
     */
    value: SolanaSpecific;
    case: "solanaSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.PolkadotSpecific polkadot_specific = 10;
     */
    value: PolkadotSpecific;
    case: "polkadotSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.SuiSpecific suiche_specific = 11;
     */
    value: SuiSpecific;
    case: "suicheSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.TonSpecific ton_specific = 12;
     */
    value: TonSpecific;
    case: "tonSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.RippleSpecific ripple_specific = 13;
     */
    value: RippleSpecific;
    case: "rippleSpecific";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.TronSpecific tron_specific = 14;
     */
    value: TronSpecific;
    case: "tronSpecific";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated vultisig.keysign.v1.UtxoInfo utxo_info = 20;
   */
  utxoInfo: UtxoInfo[];

  /**
   * @generated from field: optional string memo = 21;
   */
  memo?: string;

  /**
   * @generated from oneof vultisig.keysign.v1.KeysignPayload.swap_payload
   */
  swapPayload: {
    /**
     * @generated from field: vultisig.keysign.v1.THORChainSwapPayload thorchain_swap_payload = 22;
     */
    value: THORChainSwapPayload;
    case: "thorchainSwapPayload";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.THORChainSwapPayload mayachain_swap_payload = 23;
     */
    value: THORChainSwapPayload;
    case: "mayachainSwapPayload";
  } | {
    /**
     * @generated from field: vultisig.keysign.v1.OneInchSwapPayload oneinch_swap_payload = 24;
     */
    value: OneInchSwapPayload;
    case: "oneinchSwapPayload";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional vultisig.keysign.v1.Erc20ApprovePayload erc20_approve_payload = 30;
   */
  erc20ApprovePayload?: Erc20ApprovePayload;

  /**
   * @generated from field: string vault_public_key_ecdsa = 31;
   */
  vaultPublicKeyEcdsa: string;

  /**
   * @generated from field: string vault_local_party_id = 32;
   */
  vaultLocalPartyId: string;
};

/**
 * Describes the message vultisig.keysign.v1.KeysignPayload.
 * Use `create(KeysignPayloadSchema)` to create a new message.
 */
export const KeysignPayloadSchema: GenMessage<KeysignPayload> = /*@__PURE__*/
  messageDesc(file_vultisig_keysign_v1_keysign_message, 1);

