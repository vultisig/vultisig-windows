// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,json_types=true"
// @generated from file rule.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Constraint, ConstraintJson, MagicConstant, MagicConstantJson } from "./constraint_pb";
import { file_constraint } from "./constraint_pb";
import type { ParameterConstraint, ParameterConstraintJson } from "./parameter_constraint_pb";
import { file_parameter_constraint } from "./parameter_constraint_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file rule.proto.
 */
export const file_rule: GenFile = /*@__PURE__*/
  fileDesc("CgpydWxlLnByb3RvEgV0eXBlcyLZAgoEUnVsZRIQCghyZXNvdXJjZRgBIAEoCRIdCgZlZmZlY3QYAiABKA4yDS50eXBlcy5FZmZlY3QSEwoLZGVzY3JpcHRpb24YAyABKAkSMQoLY29uc3RyYWludHMYBCADKAsyHC50eXBlcy5SdWxlLkNvbnN0cmFpbnRzRW50cnkSKwoNYXV0aG9yaXphdGlvbhgFIAEoCzIULnR5cGVzLkF1dGhvcml6YXRpb24SCgoCaWQYBiABKAkSOQoVcGFyYW1ldGVyX2NvbnN0cmFpbnRzGAcgAygLMhoudHlwZXMuUGFyYW1ldGVyQ29uc3RyYWludBIdCgZ0YXJnZXQYDSABKAsyDS50eXBlcy5UYXJnZXQaRQoQQ29uc3RyYWludHNFbnRyeRILCgNrZXkYASABKAkSIAoFdmFsdWUYAiABKAsyES50eXBlcy5Db25zdHJhaW50OgI4ASJ9CgZUYXJnZXQSJgoLdGFyZ2V0X3R5cGUYASABKA4yES50eXBlcy5UYXJnZXRUeXBlEhEKB2FkZHJlc3MYAiABKAlIABIuCg5tYWdpY19jb25zdGFudBgDIAEoDjIULnR5cGVzLk1hZ2ljQ29uc3RhbnRIAEIICgZ0YXJnZXQiLgoNQXV0aG9yaXphdGlvbhIMCgR0eXBlGAEgASgJEg8KB21lc3NhZ2UYAiABKAkqYgoKVGFyZ2V0VHlwZRIbChdUQVJHRVRfVFlQRV9VTlNQRUNJRklFRBAAEhcKE1RBUkdFVF9UWVBFX0FERFJFU1MQARIeChpUQVJHRVRfVFlQRV9NQUdJQ19DT05TVEFOVBACKkMKBkVmZmVjdBIWChJFRkZFQ1RfVU5TUEVDSUZJRUQQABIQCgxFRkZFQ1RfQUxMT1cQARIPCgtFRkZFQ1RfREVOWRACQiNaIWdpdGh1Yi5jb20vdnVsdGlzaWcvcmVjaXBlcy90eXBlc2IGcHJvdG8z", [file_constraint, file_parameter_constraint]);

/**
 * Rule represents a single permission rule in the policy
 *
 * @generated from message types.Rule
 */
export type Rule = Message<"types.Rule"> & {
  /**
   * Resource specifies what resource this rule applies to
   *
   * @generated from field: string resource = 1;
   */
  resource: string;

  /**
   * Effect determines whether the rule allows or denies access
   *
   * @generated from field: types.Effect effect = 2;
   */
  effect: Effect;

  /**
   * Description provides human-readable details about this rule
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Constraints defines restrictions on the resource
   *
   * @generated from field: map<string, types.Constraint> constraints = 4;
   */
  constraints: { [key: string]: Constraint };

  /**
   * Authorization defines how this should be authorized (if needed)
   *
   * @generated from field: types.Authorization authorization = 5;
   */
  authorization?: Authorization;

  /**
   * Rule ID
   *
   * @generated from field: string id = 6;
   */
  id: string;

  /**
   * Parameter constraints
   *
   * @generated from field: repeated types.ParameterConstraint parameter_constraints = 7;
   */
  parameterConstraints: ParameterConstraint[];

  /**
   * Transaction target address
   *
   * @generated from field: types.Target target = 13;
   */
  target?: Target;
};

/**
 * Rule represents a single permission rule in the policy
 *
 * @generated from message types.Rule
 */
export type RuleJson = {
  /**
   * Resource specifies what resource this rule applies to
   *
   * @generated from field: string resource = 1;
   */
  resource?: string;

  /**
   * Effect determines whether the rule allows or denies access
   *
   * @generated from field: types.Effect effect = 2;
   */
  effect?: EffectJson;

  /**
   * Description provides human-readable details about this rule
   *
   * @generated from field: string description = 3;
   */
  description?: string;

  /**
   * Constraints defines restrictions on the resource
   *
   * @generated from field: map<string, types.Constraint> constraints = 4;
   */
  constraints?: { [key: string]: ConstraintJson };

  /**
   * Authorization defines how this should be authorized (if needed)
   *
   * @generated from field: types.Authorization authorization = 5;
   */
  authorization?: AuthorizationJson;

  /**
   * Rule ID
   *
   * @generated from field: string id = 6;
   */
  id?: string;

  /**
   * Parameter constraints
   *
   * @generated from field: repeated types.ParameterConstraint parameter_constraints = 7;
   */
  parameterConstraints?: ParameterConstraintJson[];

  /**
   * Transaction target address
   *
   * @generated from field: types.Target target = 13;
   */
  target?: TargetJson;
};

/**
 * Describes the message types.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema: GenMessage<Rule, {jsonType: RuleJson}> = /*@__PURE__*/
  messageDesc(file_rule, 0);

/**
 * @generated from message types.Target
 */
export type Target = Message<"types.Target"> & {
  /**
   * @generated from field: types.TargetType target_type = 1;
   */
  targetType: TargetType;

  /**
   * @generated from oneof types.Target.target
   */
  target: {
    /**
     * @generated from field: string address = 2;
     */
    value: string;
    case: "address";
  } | {
    /**
     * @generated from field: types.MagicConstant magic_constant = 3;
     */
    value: MagicConstant;
    case: "magicConstant";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message types.Target
 */
export type TargetJson = {
  /**
   * @generated from field: types.TargetType target_type = 1;
   */
  targetType?: TargetTypeJson;

  /**
   * @generated from field: string address = 2;
   */
  address?: string;

  /**
   * @generated from field: types.MagicConstant magic_constant = 3;
   */
  magicConstant?: MagicConstantJson;
};

/**
 * Describes the message types.Target.
 * Use `create(TargetSchema)` to create a new message.
 */
export const TargetSchema: GenMessage<Target, {jsonType: TargetJson}> = /*@__PURE__*/
  messageDesc(file_rule, 1);

/**
 * Authorization represents how a transaction should be authorized
 *
 * @generated from message types.Authorization
 */
export type Authorization = Message<"types.Authorization"> & {
  /**
   * Type of authorization (prompt, allow, deny)
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Message to display when prompting the user
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Authorization represents how a transaction should be authorized
 *
 * @generated from message types.Authorization
 */
export type AuthorizationJson = {
  /**
   * Type of authorization (prompt, allow, deny)
   *
   * @generated from field: string type = 1;
   */
  type?: string;

  /**
   * Message to display when prompting the user
   *
   * @generated from field: string message = 2;
   */
  message?: string;
};

/**
 * Describes the message types.Authorization.
 * Use `create(AuthorizationSchema)` to create a new message.
 */
export const AuthorizationSchema: GenMessage<Authorization, {jsonType: AuthorizationJson}> = /*@__PURE__*/
  messageDesc(file_rule, 2);

/**
 * @generated from enum types.TargetType
 */
export enum TargetType {
  /**
   * @generated from enum value: TARGET_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TARGET_TYPE_ADDRESS = 1;
   */
  ADDRESS = 1,

  /**
   * @generated from enum value: TARGET_TYPE_MAGIC_CONSTANT = 2;
   */
  MAGIC_CONSTANT = 2,
}

/**
 * @generated from enum types.TargetType
 */
export type TargetTypeJson = "TARGET_TYPE_UNSPECIFIED" | "TARGET_TYPE_ADDRESS" | "TARGET_TYPE_MAGIC_CONSTANT";

/**
 * Describes the enum types.TargetType.
 */
export const TargetTypeSchema: GenEnum<TargetType, TargetTypeJson> = /*@__PURE__*/
  enumDesc(file_rule, 0);

/**
 * Effect determines whether a rule allows or denies access
 *
 * @generated from enum types.Effect
 */
export enum Effect {
  /**
   * @generated from enum value: EFFECT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: EFFECT_ALLOW = 1;
   */
  ALLOW = 1,

  /**
   * @generated from enum value: EFFECT_DENY = 2;
   */
  DENY = 2,
}

/**
 * Effect determines whether a rule allows or denies access
 *
 * @generated from enum types.Effect
 */
export type EffectJson = "EFFECT_UNSPECIFIED" | "EFFECT_ALLOW" | "EFFECT_DENY";

/**
 * Describes the enum types.Effect.
 */
export const EffectSchema: GenEnum<Effect, EffectJson> = /*@__PURE__*/
  enumDesc(file_rule, 1);

