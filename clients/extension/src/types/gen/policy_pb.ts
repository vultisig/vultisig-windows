// @generated by protoc-gen-es v2.4.0 with parameter "target=ts"
// @generated from file policy.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Rule } from "./rule_pb";
import { file_rule } from "./rule_pb";
import type { ScheduleFrequency } from "./scheduling_pb";
import { file_scheduling } from "./scheduling_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file policy.proto.
 */
export const file_policy: GenFile = /*@__PURE__*/
  fileDesc("Cgxwb2xpY3kucHJvdG8SBXR5cGVzIrYBCglGZWVQb2xpY3kSCgoCaWQYASABKAkSHAoEdHlwZRgCIAEoDjIOLnR5cGVzLkZlZVR5cGUSKgoJZnJlcXVlbmN5GAMgASgOMhcudHlwZXMuQmlsbGluZ0ZyZXF1ZW5jeRIOCgZhbW91bnQYBCABKAMSLgoKc3RhcnRfZGF0ZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLZGVzY3JpcHRpb24YBiABKAkiuQIKBlBvbGljeRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEg8KB3ZlcnNpb24YBCABKAUSDgoGYXV0aG9yGAUgASgJEhoKBXJ1bGVzGAYgAygLMgsudHlwZXMuUnVsZRIuCgpjcmVhdGVkX2F0GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIhCghzY2hlZHVsZRgJIAEoCzIPLnR5cGVzLlNjaGVkdWxlEhgKEHNjaGVkdWxlX3ZlcnNpb24YCiABKAUSJgoMZmVlX3BvbGljaWVzGAsgAygLMhAudHlwZXMuRmVlUG9saWN5Ir8BCghTY2hlZHVsZRIrCglmcmVxdWVuY3kYAiABKA4yGC50eXBlcy5TY2hlZHVsZUZyZXF1ZW5jeRIuCgpzdGFydF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFgoObWF4X2V4ZWN1dGlvbnMYBSABKAUSEAoIaW50ZXJ2YWwYBiABKAUqTQoHRmVlVHlwZRIYChRGRUVfVFlQRV9VTlNQRUNJRklFRBAAEg0KCVJFQ1VSUklORxABEggKBE9OQ0UQAhIPCgtUUkFOU0FDVElPThADKmcKEEJpbGxpbmdGcmVxdWVuY3kSIQodQklMTElOR19GUkVRVUVOQ1lfVU5TUEVDSUZJRUQQABIJCgVEQUlMWRABEgoKBldFRUtMWRACEgwKCEJJV0VFS0xZEAMSCwoHTU9OVEhMWRAEQiNaIWdpdGh1Yi5jb20vdnVsdGlzaWcvcmVjaXBlcy90eXBlc2IGcHJvdG8z", [file_google_protobuf_timestamp, file_rule, file_scheduling]);

/**
 * FeePolicy represents a single billing configuration
 *
 * @generated from message types.FeePolicy
 */
export type FeePolicy = Message<"types.FeePolicy"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: types.FeeType type = 2;
   */
  type: FeeType;

  /**
   * Frequency only applies to recurring types
   *
   * @generated from field: types.BillingFrequency frequency = 3;
   */
  frequency: BillingFrequency;

  /**
   * @generated from field: int64 amount = 4;
   */
  amount: bigint;

  /**
   * When billing starts (optional)
   *
   * @generated from field: google.protobuf.Timestamp start_date = 5;
   */
  startDate?: Timestamp;

  /**
   * Optional description
   *
   * @generated from field: string description = 6;
   */
  description: string;
};

/**
 * Describes the message types.FeePolicy.
 * Use `create(FeePolicySchema)` to create a new message.
 */
export const FeePolicySchema: GenMessage<FeePolicy> = /*@__PURE__*/
  messageDesc(file_policy, 0);

/**
 * Policy represents a set of rules that determine what a plugin is allowed to do
 *
 * @generated from message types.Policy
 */
export type Policy = Message<"types.Policy"> & {
  /**
   * ID is a unique identifier for the policy
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Name is a human-readable name for the policy
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Description provides details about what the policy allows
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Version is the policy version
   *
   * @generated from field: int32 version = 4;
   */
  version: number;

  /**
   * Author is the identifier of the plugin developer
   *
   * @generated from field: string author = 5;
   */
  author: string;

  /**
   * Rules is an ordered list of permission rules
   *
   * @generated from field: repeated types.Rule rules = 6;
   */
  rules: Rule[];

  /**
   * CreatedAt is when the policy was created
   *
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * UpdatedAt is when the policy was last updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;

  /**
   * Schedule defines when this policy should be executed (optional)
   *
   * @generated from field: types.Schedule schedule = 9;
   */
  schedule?: Schedule;

  /**
   * Version of the scheduling specification
   *
   * @generated from field: int32 schedule_version = 10;
   */
  scheduleVersion: number;

  /**
   * FeePolicies defines the billing configuration for this policy
   *
   * @generated from field: repeated types.FeePolicy fee_policies = 11;
   */
  feePolicies: FeePolicy[];
};

/**
 * Describes the message types.Policy.
 * Use `create(PolicySchema)` to create a new message.
 */
export const PolicySchema: GenMessage<Policy> = /*@__PURE__*/
  messageDesc(file_policy, 1);

/**
 * Schedule defines when and how often a policy should be executed
 *
 * @generated from message types.Schedule
 */
export type Schedule = Message<"types.Schedule"> & {
  /**
   * Frequency of execution
   *
   * @generated from field: types.ScheduleFrequency frequency = 2;
   */
  frequency: ScheduleFrequency;

  /**
   * When to start the schedule
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * When to end the schedule (optional, if not set, runs indefinitely)
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * Maximum number of executions (optional)
   *
   * @generated from field: int32 max_executions = 5;
   */
  maxExecutions: number;

  /**
   *  this is supplement  to ScheduleFrequency, so we can do like every two days etc.
   *
   * @generated from field: int32 interval = 6;
   */
  interval: number;
};

/**
 * Describes the message types.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_policy, 2);

/**
 * Enum representing fee types
 *
 * @generated from enum types.FeeType
 */
export enum FeeType {
  /**
   * @generated from enum value: FEE_TYPE_UNSPECIFIED = 0;
   */
  FEE_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: RECURRING = 1;
   */
  RECURRING = 1,

  /**
   * @generated from enum value: ONCE = 2;
   */
  ONCE = 2,

  /**
   * @generated from enum value: TRANSACTION = 3;
   */
  TRANSACTION = 3,
}

/**
 * Describes the enum types.FeeType.
 */
export const FeeTypeSchema: GenEnum<FeeType> = /*@__PURE__*/
  enumDesc(file_policy, 0);

/**
 * Enum representing billing frequency
 *
 * @generated from enum types.BillingFrequency
 */
export enum BillingFrequency {
  /**
   * @generated from enum value: BILLING_FREQUENCY_UNSPECIFIED = 0;
   */
  BILLING_FREQUENCY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: DAILY = 1;
   */
  DAILY = 1,

  /**
   * @generated from enum value: WEEKLY = 2;
   */
  WEEKLY = 2,

  /**
   * @generated from enum value: BIWEEKLY = 3;
   */
  BIWEEKLY = 3,

  /**
   * @generated from enum value: MONTHLY = 4;
   */
  MONTHLY = 4,
}

/**
 * Describes the enum types.BillingFrequency.
 */
export const BillingFrequencySchema: GenEnum<BillingFrequency> = /*@__PURE__*/
  enumDesc(file_policy, 1);

