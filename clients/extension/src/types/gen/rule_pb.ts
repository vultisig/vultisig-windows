// @generated by protoc-gen-es v2.4.0 with parameter "target=ts"
// @generated from file rule.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Constraint } from "./constraint_pb";
import { file_constraint } from "./constraint_pb";
import type { ParameterConstraint } from "./parameter_constraint_pb";
import { file_parameter_constraint } from "./parameter_constraint_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file rule.proto.
 */
export const file_rule: GenFile = /*@__PURE__*/
  fileDesc("CgpydWxlLnByb3RvEgV0eXBlcyK6AgoEUnVsZRIQCghyZXNvdXJjZRgBIAEoCRIdCgZlZmZlY3QYAiABKA4yDS50eXBlcy5FZmZlY3QSEwoLZGVzY3JpcHRpb24YAyABKAkSMQoLY29uc3RyYWludHMYBCADKAsyHC50eXBlcy5SdWxlLkNvbnN0cmFpbnRzRW50cnkSKwoNYXV0aG9yaXphdGlvbhgFIAEoCzIULnR5cGVzLkF1dGhvcml6YXRpb24SCgoCaWQYBiABKAkSOQoVcGFyYW1ldGVyX2NvbnN0cmFpbnRzGAcgAygLMhoudHlwZXMuUGFyYW1ldGVyQ29uc3RyYWludBpFChBDb25zdHJhaW50c0VudHJ5EgsKA2tleRgBIAEoCRIgCgV2YWx1ZRgCIAEoCzIRLnR5cGVzLkNvbnN0cmFpbnQ6AjgBIi4KDUF1dGhvcml6YXRpb24SDAoEdHlwZRgBIAEoCRIPCgdtZXNzYWdlGAIgASgJKkMKBkVmZmVjdBIWChJFRkZFQ1RfVU5TUEVDSUZJRUQQABIQCgxFRkZFQ1RfQUxMT1cQARIPCgtFRkZFQ1RfREVOWRACQiNaIWdpdGh1Yi5jb20vdnVsdGlzaWcvcmVjaXBlcy90eXBlc2IGcHJvdG8z", [file_constraint, file_parameter_constraint]);

/**
 * Rule represents a single permission rule in the policy
 *
 * @generated from message types.Rule
 */
export type Rule = Message<"types.Rule"> & {
  /**
   * Resource specifies what resource this rule applies to
   *
   * @generated from field: string resource = 1;
   */
  resource: string;

  /**
   * Effect determines whether the rule allows or denies access
   *
   * @generated from field: types.Effect effect = 2;
   */
  effect: Effect;

  /**
   * Description provides human-readable details about this rule
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Constraints defines restrictions on the resource
   *
   * @generated from field: map<string, types.Constraint> constraints = 4;
   */
  constraints: { [key: string]: Constraint };

  /**
   * Authorization defines how this should be authorized (if needed)
   *
   * @generated from field: types.Authorization authorization = 5;
   */
  authorization?: Authorization;

  /**
   * Rule ID
   *
   * @generated from field: string id = 6;
   */
  id: string;

  /**
   * Parameter constraints
   *
   * @generated from field: repeated types.ParameterConstraint parameter_constraints = 7;
   */
  parameterConstraints: ParameterConstraint[];
};

/**
 * Describes the message types.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema: GenMessage<Rule> = /*@__PURE__*/
  messageDesc(file_rule, 0);

/**
 * Authorization represents how a transaction should be authorized
 *
 * @generated from message types.Authorization
 */
export type Authorization = Message<"types.Authorization"> & {
  /**
   * Type of authorization (prompt, allow, deny)
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Message to display when prompting the user
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message types.Authorization.
 * Use `create(AuthorizationSchema)` to create a new message.
 */
export const AuthorizationSchema: GenMessage<Authorization> = /*@__PURE__*/
  messageDesc(file_rule, 1);

/**
 * Effect determines whether a rule allows or denies access
 *
 * @generated from enum types.Effect
 */
export enum Effect {
  /**
   * @generated from enum value: EFFECT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: EFFECT_ALLOW = 1;
   */
  ALLOW = 1,

  /**
   * @generated from enum value: EFFECT_DENY = 2;
   */
  DENY = 2,
}

/**
 * Describes the enum types.Effect.
 */
export const EffectSchema: GenEnum<Effect> = /*@__PURE__*/
  enumDesc(file_rule, 0);

