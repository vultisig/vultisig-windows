// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vultisig/keysign/v1/keysign_message.proto (package vultisig.keysign.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';
import { Coin } from './coin_pb.js';
import {
  CosmosSpecific,
  EthereumSpecific,
  MAYAChainSpecific,
  PolkadotSpecific,
  SolanaSpecific,
  SuiSpecific,
  THORChainSpecific,
  UTXOSpecific,
} from './blockchain_specific_pb.js';
import { UtxoInfo } from './utxo_info_pb.js';
import { THORChainSwapPayload } from './thorchain_swap_payload_pb.js';
import { OneInchSwapPayload } from './1inch_swap_payload_pb.js';
import { Erc20ApprovePayload } from './erc20_approve_payload_pb.js';

/**
 * @generated from message vultisig.keysign.v1.KeysignMessage
 */
export class KeysignMessage extends Message<KeysignMessage> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = '';

  /**
   * @generated from field: string service_name = 2;
   */
  serviceName = '';

  /**
   * @generated from field: string encryption_key_hex = 4;
   */
  encryptionKeyHex = '';

  /**
   * @generated from field: vultisig.keysign.v1.KeysignPayload keysign_payload = 5;
   */
  keysignPayload?: KeysignPayload;

  /**
   * @generated from field: bool use_vultisig_relay = 6;
   */
  useVultisigRelay = false;

  constructor(data?: PartialMessage<KeysignMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'vultisig.keysign.v1.KeysignMessage';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'session_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: 'service_name',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: 'encryption_key_hex',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 5, name: 'keysign_payload', kind: 'message', T: KeysignPayload },
    {
      no: 6,
      name: 'use_vultisig_relay',
      kind: 'scalar',
      T: 8 /* ScalarType.BOOL */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): KeysignMessage {
    return new KeysignMessage().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): KeysignMessage {
    return new KeysignMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): KeysignMessage {
    return new KeysignMessage().fromJsonString(jsonString, options);
  }

  static equals(
    a: KeysignMessage | PlainMessage<KeysignMessage> | undefined,
    b: KeysignMessage | PlainMessage<KeysignMessage> | undefined
  ): boolean {
    return proto3.util.equals(KeysignMessage, a, b);
  }
}

/**
 * @generated from message vultisig.keysign.v1.KeysignPayload
 */
export class KeysignPayload extends Message<KeysignPayload> {
  /**
   * @generated from field: vultisig.keysign.v1.Coin coin = 1;
   */
  coin?: Coin;

  /**
   * @generated from field: string to_address = 2;
   */
  toAddress = '';

  /**
   * @generated from field: string to_amount = 3;
   */
  toAmount = '';

  /**
   * @generated from oneof vultisig.keysign.v1.KeysignPayload.blockchain_specific
   */
  blockchainSpecific:
    | {
        /**
         * @generated from field: vultisig.keysign.v1.UTXOSpecific utxo_specific = 4;
         */
        value: UTXOSpecific;
        case: 'utxoSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.EthereumSpecific ethereum_specific = 5;
         */
        value: EthereumSpecific;
        case: 'ethereumSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.THORChainSpecific thorchain_specific = 6;
         */
        value: THORChainSpecific;
        case: 'thorchainSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.MAYAChainSpecific maya_specific = 7;
         */
        value: MAYAChainSpecific;
        case: 'mayaSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.CosmosSpecific cosmos_specific = 8;
         */
        value: CosmosSpecific;
        case: 'cosmosSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.SolanaSpecific solana_specific = 9;
         */
        value: SolanaSpecific;
        case: 'solanaSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.PolkadotSpecific polkadot_specific = 10;
         */
        value: PolkadotSpecific;
        case: 'polkadotSpecific';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.SuiSpecific suiche_specific = 11;
         */
        value: SuiSpecific;
        case: 'suicheSpecific';
      }
    | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: repeated vultisig.keysign.v1.UtxoInfo utxo_info = 20;
   */
  utxoInfo: UtxoInfo[] = [];

  /**
   * @generated from field: optional string memo = 21;
   */
  memo?: string;

  /**
   * @generated from oneof vultisig.keysign.v1.KeysignPayload.swap_payload
   */
  swapPayload:
    | {
        /**
         * @generated from field: vultisig.keysign.v1.THORChainSwapPayload thorchain_swap_payload = 22;
         */
        value: THORChainSwapPayload;
        case: 'thorchainSwapPayload';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.THORChainSwapPayload mayachain_swap_payload = 23;
         */
        value: THORChainSwapPayload;
        case: 'mayachainSwapPayload';
      }
    | {
        /**
         * @generated from field: vultisig.keysign.v1.OneInchSwapPayload oneinch_swap_payload = 24;
         */
        value: OneInchSwapPayload;
        case: 'oneinchSwapPayload';
      }
    | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: optional vultisig.keysign.v1.Erc20ApprovePayload erc20_approve_payload = 30;
   */
  erc20ApprovePayload?: Erc20ApprovePayload;

  /**
   * @generated from field: string vault_public_key_ecdsa = 31;
   */
  vaultPublicKeyEcdsa = '';

  /**
   * @generated from field: string vault_local_party_id = 32;
   */
  vaultLocalPartyId = '';

  constructor(data?: PartialMessage<KeysignPayload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'vultisig.keysign.v1.KeysignPayload';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'coin', kind: 'message', T: Coin },
    { no: 2, name: 'to_address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'to_amount', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 4,
      name: 'utxo_specific',
      kind: 'message',
      T: UTXOSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 5,
      name: 'ethereum_specific',
      kind: 'message',
      T: EthereumSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 6,
      name: 'thorchain_specific',
      kind: 'message',
      T: THORChainSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 7,
      name: 'maya_specific',
      kind: 'message',
      T: MAYAChainSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 8,
      name: 'cosmos_specific',
      kind: 'message',
      T: CosmosSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 9,
      name: 'solana_specific',
      kind: 'message',
      T: SolanaSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 10,
      name: 'polkadot_specific',
      kind: 'message',
      T: PolkadotSpecific,
      oneof: 'blockchain_specific',
    },
    {
      no: 11,
      name: 'suiche_specific',
      kind: 'message',
      T: SuiSpecific,
      oneof: 'blockchain_specific',
    },
    { no: 20, name: 'utxo_info', kind: 'message', T: UtxoInfo, repeated: true },
    {
      no: 21,
      name: 'memo',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
    {
      no: 22,
      name: 'thorchain_swap_payload',
      kind: 'message',
      T: THORChainSwapPayload,
      oneof: 'swap_payload',
    },
    {
      no: 23,
      name: 'mayachain_swap_payload',
      kind: 'message',
      T: THORChainSwapPayload,
      oneof: 'swap_payload',
    },
    {
      no: 24,
      name: 'oneinch_swap_payload',
      kind: 'message',
      T: OneInchSwapPayload,
      oneof: 'swap_payload',
    },
    {
      no: 30,
      name: 'erc20_approve_payload',
      kind: 'message',
      T: Erc20ApprovePayload,
      opt: true,
    },
    {
      no: 31,
      name: 'vault_public_key_ecdsa',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 32,
      name: 'vault_local_party_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): KeysignPayload {
    return new KeysignPayload().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): KeysignPayload {
    return new KeysignPayload().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): KeysignPayload {
    return new KeysignPayload().fromJsonString(jsonString, options);
  }

  static equals(
    a: KeysignPayload | PlainMessage<KeysignPayload> | undefined,
    b: KeysignPayload | PlainMessage<KeysignPayload> | undefined
  ): boolean {
    return proto3.util.equals(KeysignPayload, a, b);
  }
}
