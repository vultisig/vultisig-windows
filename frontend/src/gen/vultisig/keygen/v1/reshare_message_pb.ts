// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vultisig/keygen/v1/reshare_message.proto (package vultisig.keygen.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message vultisig.keygen.v1.ReshareMessage
 */
export class ReshareMessage extends Message<ReshareMessage> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = '';

  /**
   * @generated from field: string hex_chain_code = 2;
   */
  hexChainCode = '';

  /**
   * @generated from field: string service_name = 3;
   */
  serviceName = '';

  /**
   * @generated from field: string public_key_ecdsa = 4;
   */
  publicKeyEcdsa = '';

  /**
   * @generated from field: repeated string old_parties = 5;
   */
  oldParties: string[] = [];

  /**
   * @generated from field: string encryption_key_hex = 6;
   */
  encryptionKeyHex = '';

  /**
   * @generated from field: bool use_vultisig_relay = 7;
   */
  useVultisigRelay = false;

  /**
   * @generated from field: string old_reshare_prefix = 8;
   */
  oldResharePrefix = '';

  /**
   * @generated from field: string vault_name = 9;
   */
  vaultName = '';

  constructor(data?: PartialMessage<ReshareMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'vultisig.keygen.v1.ReshareMessage';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'session_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: 'hex_chain_code',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 3,
      name: 'service_name',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: 'public_key_ecdsa',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 5,
      name: 'old_parties',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
      repeated: true,
    },
    {
      no: 6,
      name: 'encryption_key_hex',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 7,
      name: 'use_vultisig_relay',
      kind: 'scalar',
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 8,
      name: 'old_reshare_prefix',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 9, name: 'vault_name', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ReshareMessage {
    return new ReshareMessage().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ReshareMessage {
    return new ReshareMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ReshareMessage {
    return new ReshareMessage().fromJsonString(jsonString, options);
  }

  static equals(
    a: ReshareMessage | PlainMessage<ReshareMessage> | undefined,
    b: ReshareMessage | PlainMessage<ReshareMessage> | undefined
  ): boolean {
    return proto3.util.equals(ReshareMessage, a, b);
  }
}
